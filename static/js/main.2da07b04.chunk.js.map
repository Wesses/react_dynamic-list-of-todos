{"version":3,"sources":["types/Filter.ts","components/TodoContext/TodoContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterEnum","TodoContext","createContext","showedTodo","setShowedTodo","TodoContextProvider","children","useState","Provider","value","TodoItem","todo","id","completed","title","useContext","className","onMouseEnter","event","currentTarget","classList","add","onMouseLeave","remove","classNames","type","onClick","TodoList","todos","map","TodoFilter","filter","onFilter","select","onChange","target","Object","values","at","toUpperCase","slice","placeholder","input","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","showedUser","setShowedUser","isLoading","setIsLoading","useEffect","userId","catch","finally","href","email","name","DEFAULT_FILTER","All","App","setTodos","setFilter","filtredTodos","useMemo","validatedInput","toLowerCase","trim","newTodos","includes","Active","Completed","getFiltredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2da07b04.chunk.js","sourcesContent":["export enum FilterEnum {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport type Filter = {\n  select: FilterEnum;\n  input: string;\n};\n","import React, { createContext, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype ContextObject = {\n  showedTodo: Todo | null;\n  setShowedTodo: (u: Todo | null) => void;\n};\n\nexport const TodoContext = createContext<ContextObject>({\n  showedTodo: null,\n  setShowedTodo: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodoContextProvider:React.FC<Props> = ({ children }) => {\n  const [showedTodo, setShowedTodo] = useState<Todo | null>(null);\n\n  return (\n    <TodoContext.Provider value={{ showedTodo, setShowedTodo }}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../TodoContext';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n  } = todo;\n\n  const { showedTodo, setShowedTodo } = useContext(TodoContext);\n\n  const handleMouseEnter = (event: React.MouseEvent<HTMLTableRowElement>) => {\n    event.currentTarget.classList.add('has-background-info-light');\n  };\n\n  const handleMouseLeave = (event: React.MouseEvent<HTMLTableRowElement>) => {\n    event.currentTarget.classList.remove('has-background-info-light');\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className=\"\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      {completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setShowedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye-slash': showedTodo?.id === id,\n              'fa-eye': showedTodo?.id !== id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter, FilterEnum } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter;\n  onFilter: (f: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filter, onFilter }) => {\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilter({\n      ...filter,\n      select: event.target.value as FilterEnum,\n    });\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onFilter({\n      ...filter,\n      input: event.target.value,\n    });\n  };\n\n  const handleClearInput = () => {\n    onFilter({\n      ...filter,\n      input: '',\n    });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.select}\n            onChange={handleChangeSelect}\n          >\n            {Object.values(FilterEnum).map(value => (\n              <option value={value} key={value}>\n                {value.at(0)?.toUpperCase() + value.slice(1)}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.input}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!filter.input && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"deleteButton\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { TodoContext } from '../TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const [showedUser, setShowedUser] = useState<User | null>(null);\n  const { showedTodo, setShowedTodo } = useContext(TodoContext);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (showedTodo?.userId) {\n      setIsLoading(true);\n      getUser(showedTodo.userId)\n        .then(setShowedUser)\n        .catch(() => setShowedUser(null))\n        .finally(() => setIsLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${showedTodo?.id}`}\n            </div>\n\n            <button\n              aria-label=\"deleteButton\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setShowedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {showedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-success': showedTodo?.completed,\n                  'has-text-danger': !showedTodo?.completed,\n                })}\n              >\n                {showedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${showedUser?.email}`}>\n                {showedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useEffect,\n  useState,\n  useContext,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoContext } from './components/TodoContext';\nimport { Filter, FilterEnum } from './types/Filter';\n\nconst DEFAULT_FILTER: Filter = {\n  select: FilterEnum.All,\n  input: '',\n};\n\nconst getFiltredTodos = (filter: Filter, todos: Todo[]): Todo[] => {\n  const { input, select } = filter;\n\n  if (!input && select === FilterEnum.All) {\n    return todos;\n  }\n\n  const validatedInput = input.toLowerCase().trim();\n  let newTodos = todos\n    .filter(({ title }) => title.toLowerCase().includes(validatedInput));\n\n  switch (select) {\n    case FilterEnum.Active:\n      newTodos = newTodos.filter(({ completed }) => !completed);\n      break;\n    case FilterEnum.Completed:\n      newTodos = newTodos.filter(({ completed }) => completed);\n      break;\n    default:\n  }\n\n  return newTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>(DEFAULT_FILTER);\n  const { showedTodo } = useContext(TodoContext);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const filtredTodos = useMemo(\n    () => getFiltredTodos(filter, todos),\n    [filter, todos],\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => setTodos([]))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} onFilter={setFilter} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <>\n                  <TodoList todos={filtredTodos} />\n                  {!todos.length && 'No todos'}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoContextProvider } from './components/TodoContext';\n\nReactDOM.render(\n  <TodoContextProvider>\n    <App />\n  </TodoContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}