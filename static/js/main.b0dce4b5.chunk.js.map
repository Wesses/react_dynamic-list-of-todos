{"version":3,"sources":["components/TodoContext/TodoContext.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/Filter.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoContext","createContext","showedTodo","setShowedTodo","TodoContextProvider","children","useState","Provider","value","TodoList","todos","useContext","handleMouseEnter","event","currentTarget","classList","add","handleMouseLeave","remove","className","map","todo","id","completed","title","onMouseEnter","onMouseLeave","classNames","type","onClick","TodoFilter","filter","onFilter","select","onChange","target","placeholder","input","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterEnum","Loader","TodoModal","showedUser","setShowedUser","useEffect","userId","href","email","name","DEFAULT_FILTER","all","App","setTodos","setFilter","filtredTodos","useMemo","newTodos","validatedInput","toLowerCase","trim","includes","active","getFiltredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0dce4b5.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype ContextObject = {\n  showedTodo: Todo | null;\n  setShowedTodo: (u: Todo | null) => void;\n};\n\nexport const TodoContext = createContext<ContextObject>({\n  showedTodo: null,\n  setShowedTodo: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodoContextProvider:React.FC<Props> = ({ children }) => {\n  const [showedTodo, setShowedTodo] = useState<Todo | null>(null);\n\n  return (\n    <TodoContext.Provider value={{ showedTodo, setShowedTodo }}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../TodoContext';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const { showedTodo, setShowedTodo } = useContext(TodoContext);\n\n  const handleMouseEnter = (event: React.MouseEvent<HTMLTableRowElement>) => {\n    event.currentTarget.classList.add('has-background-info-light');\n  };\n\n  const handleMouseLeave = (event: React.MouseEvent<HTMLTableRowElement>) => {\n    event.currentTarget.classList.remove('has-background-info-light');\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const {\n            id,\n            completed,\n            title,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n              onMouseEnter={handleMouseEnter}\n              onMouseLeave={handleMouseLeave}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              {completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setShowedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye-slash': showedTodo?.id === id,\n                      'fa-eye': showedTodo?.id !== id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter, FilterEnum } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter;\n  onFilter: (f: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filter, onFilter }) => {\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilter({\n      ...filter,\n      select: event.target.value as FilterEnum,\n    });\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onFilter({\n      ...filter,\n      input: event.target.value,\n    });\n  };\n\n  const handleClickCross = () => {\n    onFilter({\n      ...filter,\n      input: '',\n    });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.select}\n            onChange={handleChangeSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.input}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!filter.input && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClickCross}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterEnum {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport type Filter = {\n  select: FilterEnum;\n  input: string;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { TodoContext } from '../TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const [showedUser, setShowedUser] = useState<User | null>(null);\n  const { showedTodo, setShowedTodo } = useContext(TodoContext);\n\n  useEffect(() => {\n    if (showedTodo?.userId) {\n      getUser(showedTodo.userId).then(setShowedUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!showedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${showedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setShowedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {showedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={showedTodo?.completed\n                  ? 'has-text-success' : 'has-text-danger'}\n              >\n                {showedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${showedUser.email}`}>\n                {showedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useEffect,\n  useState,\n  useContext,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoContext } from './components/TodoContext';\nimport { Filter, FilterEnum } from './types/Filter';\n\nconst DEFAULT_FILTER: Filter = {\n  select: FilterEnum.all,\n  input: '',\n};\n\nconst getFiltredTodos = (filter: Filter, todos: Todo[]): Todo[] => {\n  const { input, select } = filter;\n\n  if (!input && select === FilterEnum.all) {\n    return todos;\n  }\n\n  let newTodos = [...todos];\n  const validatedInput = input.toLowerCase().trim();\n\n  newTodos = newTodos\n    .filter(({ title }) => title.toLowerCase().includes(validatedInput));\n\n  switch (select) {\n    case FilterEnum.active:\n      newTodos = newTodos.filter(({ completed }) => !completed);\n      break;\n    case FilterEnum.completed:\n      newTodos = newTodos.filter(({ completed }) => completed);\n      break;\n    default:\n  }\n\n  return newTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>(DEFAULT_FILTER);\n  const { showedTodo } = useContext(TodoContext);\n\n  const filtredTodos = useMemo(\n    () => getFiltredTodos(filter, todos),\n    [filter, todos],\n  );\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} onFilter={setFilter} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList todos={filtredTodos} />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoContextProvider } from './components/TodoContext';\n\nReactDOM.render(\n  <TodoContextProvider>\n    <App />\n  </TodoContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}